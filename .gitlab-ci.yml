---
stages:
  - prepare
  - python
  - compile
  - fortran
  - statistics
  - finalize


###################################################################################################
variables:
  # ===============================================================================================
  # GitLab Settings
  # ===============================================================================================
  GIT_SUBMODULE_STRATEGY: normal

  # ===============================================================================================
  # Shortcut names
  # ===============================================================================================
  TESTROOT:   "$LOCAL_HOME/GitLabCI_Pipeline_$CI_PIPELINE_ID"
  MARC_VERSION: "2024.1"


###################################################################################################
# https://docs.gitlab.com/ci/yaml/workflow
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

create_testroot_matesting:
  stage: prepare
  tags:
    - matesting_bare-metal
  script:
    - mkdir -p ${TESTROOT}

.on_merge:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

###################################################################################################

.python_base:
  stage: python
  image: git.damask-multiphysics.org:5050/damask/damask/python:$PYTHON_IMAGE
  tags:
    - docker_all
  before_script:
    - python --version
    - pip list

.python_default:
  extends: .python_base
  variables: {PYTHON_IMAGE: 2025.02.25}

.python_min:
  extends: .python_base
  variables: {PYTHON_IMAGE: '310_2412'}


.pytest:
  script:
    - export DAMASK_ROOT=$(pwd)
    - PYTHONPATH=${DAMASK_ROOT}/python:$PYTHONPATH
    - cd python
    - python3 -m pytest -v --cov=damask --cov-report=xml -k 'not extend_docstring_parameters_function'
    - coverage report --fail-under=90 --show-missing

pytest:
  extends:
    - .pytest
    - .python_default

pytest_min:
  extends:
    - .pytest
    - .python_min
    - .on_merge

###################################################################################################

.unittest:
  stage: compile
  tags:
    - docker_all
  script:
    - source env/DAMASK.sh
    - ./bin/DAMASK_test
    - find . -name '*.gcda' -not -path "**/test/*" -exec gcov {} \;
  parallel:
    matrix:
      - BUILD_TYPE: [DEBUG, RELEASE, PERFORMANCE]

.unittest_GCC:
  extends: .unittest
  before_script:
    - cmake -B builddir -DDAMASK_SOLVER=test -DCMAKE_INSTALL_PREFIX=${PWD} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILDCMD_POST=-coverage
    - cmake --build builddir --target install

.unittest_oneAPI:
  extends: .unittest
  before_script:
    - cmake -B builddir -DDAMASK_SOLVER=test -DCMAKE_INSTALL_PREFIX=${PWD} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    - cmake --build builddir --target install


unittest_GCC:
  extends: .unittest_GCC
  image: git.damask-multiphysics.org:5050/damask/damask/gcc_petsc-debug:2025.04.30

unittest_oneAPI:
  extends: .unittest_oneAPI
  image: git.damask-multiphysics.org:5050/damask/damask/oneapi_petsc-debug:2025.04.30


unittest_GCC_min:
  extends:
    - .unittest_GCC
    - .on_merge
  image: git.damask-multiphysics.org:5050/damask/damask/gcc_petsc-debug:2025.03.10

unittest_oneAPI_min:
  extends:
    - .unittest_oneAPI
    - .on_merge
  image: git.damask-multiphysics.org:5050/damask/damask/oneapi_petsc-debug:2025.03.27


###################################################################################################

.compile:
  stage: compile
  tags:
    - docker_all
  before_script:
    - tail +$(grep -n 'Configure Actions.*' /petsc/configure.log | cut -f 1 -d:) /petsc/configure.log
    - head -n 10 /petsc/include/petscversion.h | tail -n 6
    - source env/DAMASK.sh
    - cd PRIVATE/testing
  image: git.damask-multiphysics.org:5050/damask/damask/${PETSC_IMAGE}

.fortran_default:
  parallel:
    matrix:
      - PETSC_IMAGE:
          - gcc_petsc-default:2025.04.30
          - gcc_petsc-i64:2025.04.30
          - oneapi_petsc-default:2025.04.30

.fortran_min:
  parallel:
    matrix:
      - PETSC_IMAGE:
          - gcc_petsc-default:2025.03.10
          - gcc_petsc-i64:2025.03.10
          - oneapi_petsc-default:2025.03.27

.compile_grid:
  extends: .compile
  script:
    - pytest -v -k 'compile and grid'

.compile_mesh:
  extends: .compile
  script:
    - pytest -v -k 'compile and mesh'

compile_grid:
  extends:
    - .compile_grid
    - .fortran_default

compile_mesh:
  extends:
    - .compile_mesh
    - .fortran_default

compile_grid_min:
  extends:
    - .compile_grid
    - .fortran_min
    - .on_merge

compile_mesh_min:
  extends:
    - .compile_mesh
    - .fortran_min
    - .on_merge

Marc_patch:
  stage: compile
  image: git.damask-multiphysics.org:5050/damask/damask/marc_base:${MARC_VERSION}
  tags:
    - docker_all
  script:
    - source env/DAMASK.sh
    - export TMPDIR=/tmp
    - python3 install/MarcMentat/MSC_modifications.py --editor=gted --marc-version="${MARC_VERSION}" --damask-root="${CI_PROJECT_DIR}" --marc-root=/opt/msc
    - test -f "/opt/msc/mentat${MARC_VERSION}/bin/kill6"
    - cd examples/Marc && python3 -c "import damask;damask.solver.Marc(version=${MARC_VERSION}).submit_job('r-value','texture',True,'h')"
    - test -f "${CI_PROJECT_DIR}/src/Marc/DAMASK_Marc.marc" || { echo "Marc simulation failed, DAMASK_Marc.marc not generated"; exit 1; }

Marc_compile:
  stage: compile
  image: git.damask-multiphysics.org:5050/damask/damask/marc_patched:${MARC_VERSION}
  tags:
    - docker_all
  script:
    - source env/DAMASK.sh
    - cd PRIVATE/testing
    - pytest -k 'compile and Marc'


###################################################################################################

.configexamples_debug:
  stage: compile
  tags:
    - docker_all
  before_script:
    - tail +$(grep -n 'Configure Actions.*' /petsc/configure.log | cut -f 1 -d:) /petsc/configure.log
    - head -n 10 /petsc/include/petscversion.h | tail -n 6
    - source env/DAMASK.sh
    - cmake -B builddir -DDAMASK_SOLVER=grid -DCMAKE_BUILD_TYPE=DEBUG
    - cmake --build builddir --target install
    - cd PRIVATE/testing
  script:
    - pytest -v -k configexamples

configexamples_debug_GCC:
  extends: .configexamples_debug
  image: git.damask-multiphysics.org:5050/damask/damask/gcc_petsc-default:2025.04.30

##################################################################################################

open-source_GCC:
  stage: fortran
  tags:
    - docker_all
  image: git.damask-multiphysics.org:5050/damask/damask/gcc_petsc-default:2025.04.30
  before_script:
    - cmake -DDAMASK_SOLVER=grid -B build/grid && cmake --build build/grid --parallel 2 --target install
    - cmake -DDAMASK_SOLVER=mesh -B build/mesh && cmake --build build/mesh --parallel 2 --target install
    - source env/DAMASK.sh
  script:
    - cd PRIVATE/testing
    - pytest -v -k 'not compile and not Marc'

Marc_run:
  stage: fortran
  image: git.damask-multiphysics.org:5050/damask/damask/marc_patched:${MARC_VERSION}
  tags:
    - docker_all
  before_script:
    - source env/DAMASK.sh
    - cd examples/Marc && python3 -c "import damask;damask.solver.Marc(version=${MARC_VERSION}).submit_job('r-value','texture',True,'h')"
  script:
    - cd ${CI_PROJECT_DIR}/PRIVATE/testing
    - pytest -k 'not compile and Marc'

###################################################################################################
update_website_master:
  stage: finalize
  trigger:
    project: damask/website
    branch: master
  only:
    - development

#update_website_3.0:
#  stage: finalize
#  trigger:
#    project: damask/website
#    branch: "3.0"
#  only:
#    - "3.0"
